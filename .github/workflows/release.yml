on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Build Release

jobs:
  build:
    name: Build Release & Upload Assets
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          # Optionally strip `v` prefix
          strip_v: true
      - name: Use tag
        run: echo ${{steps.tag.outputs.tag}}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
      - run: npm run make
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{steps.tag.outputs.tag}}
          draft: false
          prerelease: false
      - name: Upload Windows Zip Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./out/make/zip/win32/x64/乐乐象棋-win32-x64-${{steps.tag.outputs.tag}}.zip
          asset_name: 乐乐象棋-win32-x64-${{steps.tag.outputs.tag}}.zip
          asset_content_type: application/zip
      - name: Upload Windows SetUp Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./out/make/squirrel.windows/x64/乐乐象棋-${{steps.tag.outputs.tag}} Setup.exe
          asset_name: 乐乐象棋-${{steps.tag.outputs.tag}} Setup.exe
          asset_content_type: application/octet-stream