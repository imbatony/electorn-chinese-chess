on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Build Release

jobs:
  build:
    name: Upload Release Asset
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
        # Optionally strip `v` prefix
        strip_v: true
      - name: Use tag
        run: echo ${{steps.tag.outputs.tag}}
      # - name: Checkout code
      #   uses: actions/checkout@v2
      # - name: Build project Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: ${{ matrix.node-version }}
      #     cache: 'npm'
      # - run: npm make
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: ./my-artifact.zip
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip